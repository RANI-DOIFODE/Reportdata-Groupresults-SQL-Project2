- TASK 1 UNDERSTANDING THE DATA
- A. Describe the data in hand in your own words. (Word Limit is 500)
 1. cust_dimen: Details of all the customers
    Customer_Name (TEXT): Name of the customer
    Province (TEXT): Province of the customer
    Region (TEXT): Region of the customer
    Customer_Segment (TEXT): Segment of the customer
    Cust_id (TEXT): Unique Customer ID
	
 2. market_fact: Details of every order item sold
       Ord_id (TEXT): Order ID
       Prod_id (TEXT): Prod ID
       Ship_id (TEXT): Shipment ID
       Cust_id (TEXT): Customer ID
       Sales (DOUBLE): Sales from the Item sold
       Discount (DOUBLE): Discount on the Item sold
       Order_Quantity (INT): Order Quantity of the Item sold
       Profit (DOUBLE): Profit from the Item sold
       Shipping_Cost (DOUBLE): Shipping Cost of the Item sold
       Product_Base_Margin (DOUBLE): Product Base Margin on the Item sold
        
3. orders_dimen: Details of every order placed
		
        Order_ID (INT): Order ID
        Order_Date (TEXT): Order Date
        Order_Priority (TEXT): Priority of the Order
        Ord_id (TEXT): Unique Order ID
	
4. prod_dimen: Details of product category and sub category
		
        Product_Category (TEXT): Product Category
        Product_Sub_Category (TEXT): Product Sub Category
        Prod_id (TEXT): Unique Product ID
	
5. shipping_dimen: Details of shipping of orders
		
        Order_ID (INT): Order ID
         Ship_Mode (TEXT): Shipping Mode
         Ship_Date (TEXT): Shipping Date
         Ship_id (TEXT): Unique Shipment ID
B. Identify and list the Primary Keys and Foreign Keys for this dataset
	(Hint: If a table don’t have Primary Key or Foreign Key, then specifically mention it in your answer.)
	1. cust_dimen
           Primary Key: Cust_id
           Foreign Key: NA
	
        2. market_fact
	   Primary Key: NA
           Foreign Key: Ord_id, Prod_id, Ship_id, Cust_id
	
        3. orders_dimen
	   Primary Key: Ord_id
           Foreign Key: NA
	
        4. prod_dimen
           Primary Key: Prod_id, Product_Sub_Category
           Foreign Key: NA
	
        5. shipping_dimen
           Primary Key: Ship_id
           Foreign Key: NA





use superstore;
1. Write a query to display the Customer_Name and Customer Segment using alias name “Customer Name", "Customer Segment" from table Cust_dimen.
  SELECT c.customer_name as CustomerName,c.customer_segment as CustomerSegment
  FROM cust_dimen as c;
2. Write a query to find all the details of the customer from the table cust_dimen order by desc.
  select *
  from cust_dimen 
  order by  customer_name desc;
3. Write a query to get the Order ID, Order date from table orders_dimen where ‘Order Priority’ is high.
  select order_id,order_date
  from orders_dimen
  where order_priority like '%HIGH%';
4. Find the total and the average sales (display total_sales and avg_sales)
  select sum(sales) as total_sales,avg(sales) as avg_sales
  from market_fact;
5. Write a query to get the maximum and minimum sales from maket_fact table.
  select max(sales) as Max_sales,min(sales) as min_sales
  from market_fact;
6. Display the number of customers in each region in decreasing order of no_of_customers. The result should contain columns Region, no_of_customers.
  select Region,count(customer_name) as no_of_customers
  from cust_dimen
  group by region
  order by no_of_customers desc;
7. Find the region having maximum customers (display the region name and max(no_of_customers)
  select Region,count(customer_name) as no_of_customers
  from cust_dimen
  group by region
  order by no_of_customers desc
  limit 1;
8. Find all the customers from Atlantic region who have ever purchased ‘TABLES’and the number of tables purchased (display the customer name, no_of_tables purchased)
  select Customer_Name, count(*) as num_tables
  from market_fact s, cust_dimen c, prod_dimen p
  where s.Cust_id = c.Cust_id 
  and s.Prod_id = p.Prod_id 
  and p.Product_Sub_Category = 'TABLES'
  and c.Region = 'ATLANTIC'
  group by Customer_Name
  order by num_tables desc;
9. Find all the customers from Ontario province who own Small Business. (display the customer name, no of small business owners)
  Select distinct Customer_Name
  from cust_dimen
  where region like '%ONTARIO%'
  and Customer_Segment like '%SMALL BUSINESS%';
10. Find the number and id of products sold in decreasing order of products sold (display product id, no_of_products sold)
  SELECT 
  prod_id AS product_id, COUNT(*) AS no_of_products_sold
  FROM
  market_fact
  GROUP BY prod_id
  ORDER BY no_of_products_sold DESC;
11. Display product Id and product sub category whose produt category belongs to Furniture and Technlogy. The result should contain columns product id, productsub category.
  select prod_id,product_sub_category,product_category
  from prod_dimen
  where product_category in ('FURNITURE', 'TECHNOLOGY');
12. Display the product categories in descending order of profits (display the product category wise profits i.e. product_category, profits)?
  select p.product_category,sum(profit) as profits
  from market_fact as M
  Join Prod_dimen as P
  on M.prod_id=P.prod_id
  group by p.product_category
  order by profits desc;
13. Display the product category, product sub-category and the profit within each subcategory in three columns.
  SELECT 
  p.product_category, p.product_sub_category, SUM(m.profit) AS profits
  FROM
  market_fact m
  INNER JOIN
  prod_dimen p ON m.prod_id = p.prod_id
  GROUP BY p.product_category, p.product_sub_category;

14. Display the order date, order quantity and the sales for the order.
  select o.order_date,M.order_quantity,M.sales
  from market_fact as M
  join orders_dimen as O
  on M.ord_id=O.ord_id;
15. Display the names of the customers whose name contains the
  i) Second letter as ‘R’
  select Customer_name
  from cust_dimen
  where customer_name like '_R%';
  ii) Fourth letter as ‘D’
  select Customer_name
  from cust_dimen
  where customer_name like '___D%';
16. Write a SQL query to to make a list with Cust_Id, Sales, Customer Name and their region where sales are between 1000 and 5000.
  select c.cust_id,sum(M.sales) as Sales,c.customer_name,c.region
  from cust_dimen as c
  join market_fact as M
  on c.cust_id=M.cust_id
  group by c.cust_id
  having Sales between 1000 and 5000;
   

17. Write a SQL query to find the 3rd highest sales.
   select * from market_fact where sales < (select max(sales) from market_fact where sales < (select max(sales) from market_fact))  order by sales desc limit 1;
18. Where is the least profitable product subcategory shipped the most? For the least profitable product sub-category, display the region-wise no_of_shipments and the 
   profit made in each region in decreasing order of profits (i.e. region, no_of_shipments, profit_in_each_region)
  → Note: You can hardcode the name of the least profitable product subcategory
  SELECT 
  c.region, COUNT(distinct s.ship_id) AS no_of_shipments, SUM(m.profit) AS profit_in_each_region
  FROM
  market_fact m
  INNER JOIN
  cust_dimen c ON m.cust_id = c.cust_id
  INNER JOIN
  shipping_dimen s ON m.ship_id = s.ship_id
  INNER JOIN
  prod_dimen p ON m.prod_id = p.prod_id
  WHERE
  p.product_sub_category IN 
  (	SELECT 							-- Query for identifying the least profitable sub-category
   p.product_sub_category
   FROM
   market_fact m
   INNER JOIN
   prod_dimen p ON m.prod_id = p.prod_id
   GROUP BY p.product_sub_category
   HAVING SUM(m.profit) <= ALL
(	SELECT 
   SUM(m.profit) AS profits
   FROM	
   market_fact m
   INNER JOIN
   prod_dimen p ON m.prod_id = p.prod_id
   GROUP BY p.product_sub_category
)
)
   GROUP BY c.region
   ORDER BY profit_in_each_region DESC
